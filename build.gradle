plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = "tw.yukina.notion.sdk"
archivesBaseName = "notion-sdk-java"
version = "0.0.11"

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    implementation group: 'org.json', name: 'json', version: '20230227'
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'net.bytebuddy:byte-buddy:1.11.20'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.1'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'ch.qos.logback:logback-classic:1.2.9'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

test {
    useJUnitPlatform()
}

tasks.named('wrapper') {
  distributionType = Wrapper.DistributionType.ALL
  gradleVersion = '8.1.1'
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign configurations.archives
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'Notion in Java'
                description = 'Notion in Java'
                url = 'https://github.com/YukinaMochizuki/notion-sdk-java'
                licenses {
                    license {
                        name = 'The GNU General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                    }
                }
                developers {
                    developer {
                        id = 'YukinaMochizuki'
                        name = 'YukinaMochizuki'
                        email = '1p41p4jejo@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/YukinaMochizuki/notion-sdk-java.git'
                    developerConnection = 'scm:git:ssh://github.com/YukinaMochizuki/notion-sdk-java.git'
                    url = 'https://github.com/YukinaMochizuki/notion-sdk-java'
                }
            }
            from components.java
        }
    }
    repositories {
        maven {
            name = 'OSSRH'
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
  doFirst {
    if (System.getenv('CI')) {
      testLogging {
        // set options for log level LIFECYCLE
        events "failed"
      }
    }
  }
}
